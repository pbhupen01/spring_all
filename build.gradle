group 'com.practice'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootPluginVersion = '1.5.10.RELEASE'
        springCloudDependencies = '1.2.2.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootPluginVersion}")
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${springCloudDependencies}"
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'groovy'
apply plugin: 'spring-cloud-contract'
apply plugin: 'maven-publish'
apply plugin: 'com.palantir.docker'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'spring_all'
    version =  '0.1.0'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-contract-dependencies:${springCloudDependencies}"
    }
}

docker {
    name "${project.group}/${jar.baseName}"
    files jar.archivePath
    buildArgs(['JAR_FILE': "${jar.archiveName}"])
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/release" }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.projectlombok:lombok:1.16.20"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "postgresql:postgresql:9.1-901-1.jdbc4"
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.0'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '1.2.1.RELEASE'
    compile group: 'com.h2database', name: 'h2', version: '1.3.148'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.7.0'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.7.0'
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-devtools")
    compile("com.fasterxml.jackson.core:jackson-databind")
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'info.cukes:cucumber-java:1.1.8'
    testCompile 'info.cukes:cucumber-junit:1.1.8'
    testCompile "org.springframework.cloud:spring-cloud-contract-wiremock"
    testCompile "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"
    testCompile 'org.codehaus.groovy:groovy-all:2.4.6'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    testCompile 'org.springframework.cloud:spring-cloud-starter-contract-verifier'
}

contracts {
    testMode = 'MockMvc'
    //baseClassForTests = 'com.practice.tests'
    packageWithBaseClasses = 'com.practice.spring.contracts'
    baseClassMappings {
        baseClassMapping('.*/userservice/.*', 'com.practice.spring.contracts.UserserviceBase')
    }
    //generatedTestSourcesDir = project.file('src/generatedContract')
}